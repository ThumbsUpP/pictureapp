{"version":3,"sources":["constants.js","redux/reducer.js","redux/actions.js","redux/selector.js","comp/Header.js","comp/Header.container.js","comp/Main.js","comp/Main.container.js","helpers/combine.js","comp/Favorites.js","comp/Favorites.container.js","App.js","index.js"],"names":["FETCH_STATUS","FETCHED","FETCH_ERROR","FETCHING","initialState","pictures","favorites","fetchStatus","NOT_FETCHED","fetchCount","isFetchingData","persistConfig","key","storage","blacklist","persistReducer","state","arguments","length","undefined","action","type","Object","objectSpread","status","concat","toConsumableArray","filter","_ref","id","_ref2","setFetchStatus","picturesSelector","pick","favoriteSelector","isFetchingSelector","Main","toggleIsFetchingData","react_default","a","createElement","className","onClick","connect","Header","addToFavorite","Header_container","map","img_src","earth_date","src","width","height","alt","compose","_len","functionsToCombine","Array","_key","_len2","args","_key2","reduce","acc","func","apply","combine","fetchPicture","dispatch","getState","axios","get","then","data","photos","catch","lifecycle","componentDidMount","this","props","setInterval","Favorites","App","Favorites_container","Main_container","__webpack_require__","d","__webpack_exports__","persistor","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","reducer","applyMiddleware","thunk","persistStore","ReactDOM","render","react_redux_es","integration_react","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7f7645f6.chunk.js","sourcesContent":["export const FETCH_STATUS = {\n  FETCHED: 'FETCHED',\n  FETCH_ERROR: 'FETCH_ERROR',\n  FETCHING: 'FETCHING',\n};\n\nexport const API_HOST =\n  'https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?page=1';\n","import { FETCH_STATUS } from '../constants';\nimport { filter } from 'lodash/fp';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nexport const ADD_PICTURES = 'ADD_PICTURES';\nexport const ADD_TO_FAVORITE = 'ADD_TO_FAVORITE';\nexport const SET_FETCH_STATUS = 'SET_FETCH_STATUS';\nexport const INCREMENT_FETCH_COUNT = 'INCREMENT_FETCH_COUNT';\nexport const TOGGLE_IS_FETCHING_DATA = 'TOGGLE_IS_FETCHING_DATA';\n\nconst { NOT_FETCHED } = FETCH_STATUS;\n\nconst initialState = {\n  pictures: [],\n  favorites: [],\n  fetchStatus: NOT_FETCHED,\n  fetchCount: 0,\n  isFetchingData: true,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FETCH_STATUS:\n      return {\n        ...state,\n        fetchStatus: action.status,\n      };\n    case ADD_PICTURES:\n      return {\n        ...state,\n        pictures: [...action.pictures, ...state.pictures],\n      };\n    case ADD_TO_FAVORITE:\n      return {\n        ...state,\n        pictures: filter(({ id }) => action.id !== id)(state.pictures),\n        favorites: [\n          ...state.favorites,\n          ...filter(({ id }) => action.id === id)(state.pictures),\n        ],\n      };\n    case INCREMENT_FETCH_COUNT:\n      return {\n        ...state,\n        fetchCount: state.fetchCount + 1,\n      };\n    case TOGGLE_IS_FETCHING_DATA:\n      return {\n        ...state,\n        isFetchingData: !state.isFetchingData,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  blacklist: [\n    'pictures',\n    'fetchStatus',\n    'fetchStatus',\n    'fetchCount',\n    'isFetchingData',\n  ],\n};\n\nexport default persistReducer(persistConfig, reducer);\n","import {\n  ADD_PICTURES,\n  ADD_TO_FAVORITE,\n  INCREMENT_FETCH_COUNT,\n  SET_FETCH_STATUS,\n  TOGGLE_IS_FETCHING_DATA,\n} from './reducer';\nimport { API_HOST, FETCH_STATUS } from '../constants';\nimport axios from 'axios';\n\nconst { FETCHING, FETCH_ERROR, FETCHED } = FETCH_STATUS;\n\nconst setFetchStatus = status => ({ type: SET_FETCH_STATUS, status });\n\nconst addPictures = pictures => ({\n  type: ADD_PICTURES,\n  pictures,\n});\n\nexport const toggleIsFetchingData = () => ({\n  type: TOGGLE_IS_FETCHING_DATA,\n});\n\nexport const addToFavorite = id => ({\n  type: ADD_TO_FAVORITE,\n  id,\n});\n\nconst incrementFetchCount = () => ({\n  type: INCREMENT_FETCH_COUNT,\n});\n\nexport const fetchPicture = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const { fetchCount, isFetchingData } = state;\n    if (isFetchingData) {\n      dispatch(setFetchStatus(FETCHING));\n      axios\n        .get(`${API_HOST}&sol=${fetchCount}&api_key=DEMO_KEY`)\n        .then(({ data }) => {\n          dispatch(addPictures(data.photos));\n          dispatch(incrementFetchCount());\n          dispatch(setFetchStatus(FETCHED));\n        })\n        .catch(() => dispatch(setFetchStatus(FETCH_ERROR)));\n    }\n  };\n};\n","import { pick, property } from 'lodash/fp';\n\nexport const picturesSelector = pick('pictures');\nexport const favoriteSelector = pick('favorites');\nexport const isFetchingSelector = pick('isFetchingData');\n","import React from 'react';\nimport { map } from 'lodash/fp';\nimport './Container.css';\n\nconst Main = ({ isFetchingData, toggleIsFetchingData }) => (\n  <div className='main-container-header'>\n    <p>Main container</p>\n    <button\n      className={`button ${isFetchingData ? 'button-stop' : 'button-resume'}`}\n      onClick={toggleIsFetchingData}\n    >\n      {isFetchingData ? 'Stop' : 'Resume'}\n    </button>\n  </div>\n);\n\nexport default Main;\n","import { toggleIsFetchingData } from '../redux/actions';\nimport { isFetchingSelector } from '../redux/selector';\nimport { connect } from 'react-redux';\nimport Header from './Header';\n\nexport default connect(\n  isFetchingSelector,\n  { toggleIsFetchingData },\n)(Header);\n","import React from 'react';\nimport { map } from 'lodash/fp';\nimport './Container.css';\nimport Header from './Header.container';\n\nconst Main = ({ pictures, addToFavorite }) => (\n  <div className='container main'>\n    <Header />\n    <div className='main-container-list'>\n      {map(({ img_src, id, earth_date }) => (\n        <div\n          key={`pict-main${id}-${earth_date}`}\n          onClick={() => addToFavorite(id)}\n          className='image-container'\n        >\n          <img src={img_src} width={200} height={200} alt={earth_date} />\n        </div>\n      ))(pictures)}\n    </div>\n  </div>\n);\n\nexport default Main;\n","import { addToFavorite, fetchPicture } from '../redux/actions';\nimport { isFetchingSelector, picturesSelector } from '../redux/selector';\nimport Main from './Main';\nimport combine from '../helpers/combine';\nimport { compose } from 'lodash/fp';\nimport { connect } from 'react-redux';\nimport { lifecycle } from 'recompose';\n\nexport default compose(\n  connect(\n    combine(picturesSelector, isFetchingSelector),\n    { fetchPicture, addToFavorite },\n  ),\n  lifecycle({\n    componentDidMount() {\n      const { fetchPicture } = this.props;\n      fetchPicture();\n      setInterval(() => {\n        fetchPicture();\n      }, 5000);\n    },\n  }),\n)(Main);\n","import { reduce } from 'lodash/fp';\n\nexport default (...functionsToCombine) => (...args) => ({\n  ...reduce((acc, func) => ({ ...acc, ...func(...args) }), {})(\n    functionsToCombine,\n  ),\n});\n","import React from 'react';\nimport { map } from 'lodash/fp';\nimport './Container.css';\n\nconst Favorites = ({ favorites }) => (\n  <div className='container'>\n    <p>Favorites container</p>\n    <div className='favorite-container-list'>\n      {map(({ img_src, id, earth_date }) => (\n        <div key={`pict-main${id}-${earth_date}`} className='image-container'>\n          <img src={img_src} width={200} height={200} alt={earth_date} />\n        </div>\n      ))(favorites)}\n    </div>\n  </div>\n);\n\nexport default Favorites;\n","import { connect } from 'react-redux';\nimport { favoriteSelector } from '../redux/selector';\nimport Favorites from './Favorites';\n\nexport default connect(favoriteSelector)(Favorites);\n","import React from 'react';\nimport { map } from 'lodash/fp';\nimport MainContainer from './comp/Main.container';\nimport './App.css';\nimport FavoritesContainer from './comp/Favorites.container';\n\nconst App = () => (\n  <div className='App'>\n    <header className='App-header'>\n      <p> Choose your favorites picture from the mars rover !</p>\n    </header>\n    <FavoritesContainer />\n    <MainContainer />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from './redux/reducer';\nimport { Provider } from 'react-redux';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}